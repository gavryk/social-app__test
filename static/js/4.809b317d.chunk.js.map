{"version":3,"sources":["components/Music/Musics.jsx","components/Music/MusicContainer.jsx"],"names":["SearchMusicForm","reduxForm","form","props","onSubmit","handleSubmit","className","Field","type","component","Input","id","placeholder","name","Musics","value","getMusicSearch","search","musics","map","music","src","album","cover_medium","alt","title","controls","preview","MusicContainer","this","getMusicThunk","isFetching","Loader","searchText","React","Component","connect","state","musicsPage","newArtist","setMusic","setIsFetching"],"mappings":"+QAkDMA,EAAkBC,YAAU,CAACC,KAAM,qBAAjBD,EAhBJ,SAACE,GACjB,OACI,uBAAMC,SAAWD,EAAME,aAAeC,UAAU,2BAAhD,UACI,cAACC,EAAA,EAAD,CACIC,KAAK,OACLC,UAAYC,IACZC,GAAG,eACHL,UAAU,4BACVM,YAAY,YACZC,KAAK,WAET,wBAAQP,UAAU,uCAAlB,0BAOGQ,EA/CA,SAACX,GAMZ,OACI,gCACI,oBAAIG,UAAU,2BAAd,mBACA,cAACN,EAAD,CAAiBI,SAPH,SAACW,GACnBZ,EAAMa,eAAeD,EAAME,WAOvB,qBAAKX,UAAU,yBAAf,SAEQH,EAAMe,OAAOC,KAAI,SAACC,GACd,OACI,sBAAoBd,UAAU,mDAA9B,UACI,qBAAKe,IAAKD,EAAME,MAAMC,aAAcC,IAAI,KACxC,6BAAKJ,EAAMK,QACX,uBAAOC,UAAQ,EAACpB,UAAU,QAA1B,SACQ,wBAAQe,IAAKD,EAAMO,QAASnB,KAAK,mBAJnCY,EAAMT,a,QCZtCiB,E,kLAECC,KAAK1B,MAAM2B,kB,+BAIV,OACI,mCAEQD,KAAK1B,MAAM4B,WACT,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,2BACWH,KAAK1B,OADhB,IAEMe,OAAQW,KAAK1B,MAAMe,OACnBe,WAAaJ,KAAK1B,MAAM8B,WACxBjB,eAAgBa,KAAK1B,MAAMa,wB,GAf1BkB,IAAMC,WAgCpBC,uBATO,SAACC,GACnB,MAAO,CACHnB,OAAQmB,EAAMC,WAAWpB,OACzBe,WAAYI,EAAMC,WAAWL,WAC7BF,WAAYM,EAAMC,WAAWP,WAC7BQ,UAAWF,EAAMC,WAAWC,aAII,CACpCC,aACAC,kBACAX,kBACAd,oBAJWoB,CAKZR","file":"static/js/4.809b317d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Music.scss'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\n\r\nconst Musics = (props) => {\r\n\r\n    let onSearchChanges = (value) => {\r\n        props.getMusicSearch(value.search)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='title pb-2 border-bottom'>Music</h1>\r\n            <SearchMusicForm onSubmit={ onSearchChanges }/>\r\n            <div className=\"music-wrapper row pt-2\">\r\n                {\r\n                    props.musics.map((music) => {\r\n                        return (\r\n                            <div key={music.id} className='card col-lg-4 col-md-6 col-xs-12  mb-4 min-h-100'>\r\n                                <img src={music.album.cover_medium} alt=\"\"/>\r\n                                <h4>{music.title}</h4>\r\n                                <audio controls className='w-100'>\r\n                                        <source src={music.preview} type=\"audio/mpeg\"/>\r\n                                </audio>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SearchMusic = (props) => {\r\n    return (\r\n        <form onSubmit={ props.handleSubmit } className=\"search-input text-center\">\r\n            <Field\r\n                type='text'\r\n                component={ Input }\r\n                id='search-music'\r\n                className=\"form-control mr-sm-2 mb-2\"\r\n                placeholder='Search...'\r\n                name='search'\r\n            />\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\">Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst SearchMusicForm = reduxForm({form: 'search-music-form'})(SearchMusic);\r\n\r\nexport default Musics;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getMusicSearch, getMusicThunk, setIsFetching, setMusic} from \"../../redux/music-reducer\";\r\nimport Musics from \"./Musics\";\r\nimport Loader from \"../common/Loader/Loader\";\r\n\r\n\r\nclass MusicContainer extends React.Component {\r\n    componentDidMount() {\r\n       this.props.getMusicThunk()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.isFetching\r\n                    ? <Loader/>\r\n                    : <Musics\r\n                            { ...this.props }\r\n                            musics={this.props.musics}\r\n                            searchText={ this.props.searchText }\r\n                            getMusicSearch={this.props.getMusicSearch}\r\n                        />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        musics: state.musicsPage.musics,\r\n        searchText: state.musicsPage.searchText,\r\n        isFetching: state.musicsPage.isFetching,\r\n        newArtist: state.musicsPage.newArtist\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    setMusic,\r\n    setIsFetching,\r\n    getMusicThunk,\r\n    getMusicSearch\r\n})(MusicContainer);"],"sourceRoot":""}